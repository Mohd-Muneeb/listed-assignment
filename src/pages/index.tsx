import MainGraph from "~/components/MainGraph";
import Navbar from "~/components/Navbar";
import PieGraph from "~/components/PieGraph";
import Schedule from "~/components/Schedule";
import SearchBar from "~/components/SearchBar";
import StatusCardsContainer from "~/components/StatusCardsContainer";
import { useRouter } from "next/router";
import { useAuthState } from "react-firebase-hooks/auth";
import { auth } from "~/config";
import Head from "next/head";
import { useEffect, useState } from "react";
import { ScheduleParser } from "~/functions";

export default function Home({ lineGraph, pieGraph, schedules }: any) {
	const [user, loading] = useAuthState(auth);

	// Line Graph State

	const [GuestsLineGraph, setGuestsLineGraph] = useState<any[]>([100]);
	const [GuestsLineColor, setGuestsLineColor] = useState("");
	const [UsersLineGraph, setUsersLineGraph] = useState<any[]>([100]);
	const [UsersLineColor, setUsersLineColor] = useState("");

	// Pie Garph State

	const [PieGraphData, setPieGraphData] = useState<any[]>([0, 0, 0]);

	// Schedule State

	const [ScheduleItems, setScheduleItems] = useState<any[]>([]);

	useEffect(() => {
		// Guests graph data parsing

		const tempGuests = lineGraph.fields.guests.mapValue.fields.data.arrayValue.values;
		const guestState = tempGuests.map((elem: any) => elem.integerValue);
		setGuestsLineGraph(guestState);
		setGuestsLineColor(lineGraph.fields.guests.mapValue.fields.color.stringValue);

		// Users graph data parsing

		const tempUsers = lineGraph.fields.users.mapValue.fields.data.arrayValue.values;
		const userState = tempUsers.map((elem: any) => elem.integerValue);
		setUsersLineGraph(userState);
		setUsersLineColor(lineGraph.fields.users.mapValue.fields.color.stringValue);

		// Pie Graph data parsing

		const tempPie = pieGraph.fields.data.arrayValue.values;
		const pieState = tempPie.map((elem: any) => elem.doubleValue);
		setPieGraphData(pieState);

		// Schedule data parsing

		const tempSchedule = schedules.fields.tasks.arrayValue.values;
		const scheduleMaps = tempSchedule.map((elem: any) => {
			return elem.mapValue;
		});

		setScheduleItems(ScheduleParser(scheduleMaps));
	}, []);

	const router = useRouter();
	if (loading) {
		return <h1>Loading...</h1>;
	}
	if (!user) {
		router.push("/auth");
	} else {
		return (
			<>
				<Head>
					<title>Listed</title>
					<meta name="description" content="Generated by create-t3-app" />
					<link rel="icon" href="/favicon.ico" />
				</Head>
				<main className="relative flex min-w-full bg-base p-[2.5vw] font-montserrat">
					<Navbar />
					<div className="w-[74.5vw] p-8">
						<SearchBar />
						<StatusCardsContainer />
						<MainGraph
							GuestsLineColor={GuestsLineColor}
							UsersLineColor={UsersLineColor}
							UsersLineGraph={UsersLineGraph}
							GuestsLineGraph={GuestsLineGraph}
						/>
						<div className="my-4 flex gap-[40px] rounded-[40px]">
							<PieGraph PieGraph={PieGraphData} />
							<Schedule ScheduleItems={ScheduleItems} />
						</div>
					</div>
				</main>
			</>
		);
	}
}

export async function getServerSideProps() {
	const lineGraphUrl =
		"https://firestore.googleapis.com/v1/projects/grocare-7442b/databases/(default)/documents/users/line-graph-data";

	const lineGraphData = await fetch(lineGraphUrl).then((response) => {
		return response.json();
	});

	const pieGraphUrl =
		"https://firestore.googleapis.com/v1/projects/grocare-7442b/databases/(default)/documents/users/pie-chart-graph";

	const pieGraphData = await fetch(pieGraphUrl).then((response) => {
		return response.json();
	});
	const schedulesUrl =
		"https://firestore.googleapis.com/v1/projects/grocare-7442b/databases/(default)/documents/users/schedules";

	const schedulesData = await fetch(schedulesUrl).then((response) => {
		return response.json();
	});

	return {
		props: {
			lineGraph: lineGraphData,
			pieGraph: pieGraphData,
			schedules: schedulesData,
		},
	};
}
